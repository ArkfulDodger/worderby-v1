c
self.pairing
Game.first.pairing
Game.all
c
Game.all
self.pairing
c
find_verified_user
c
find_verified_user
c
find_verified_user
c
find_verified_user
c
find_verified_user
User.find(33)
cookies[:user_id]
cookies
cookies.signed[:user_id]
c
Game.where(player1_id: id).includes(:player1)
Game.includes(:player1, :player2).where(player1_id: id)
Game.includes(:player1).where(player1_id: id)
Game.where(player1_id: id).include(:player1)
Game.where(player1_id: id)
c
Game.where(player1_id: self.id)+Game.where(player2_id: self.id)
Game.where(player2_id: self.id)
Game.where(player1_id: self.id)
exit
Game.where(player1_id: self.id)
Game.all
c
@current_user
c
prompt_word
c
prompt_word
c
prompt
c
exit
word_params.merge(text: bot_word[:text], p_num: bot_word[:p_num])
score
exit
word_params.merge(text: bot_word[:text], p_num: bot_word[:p_num], score: (bot_word[:p_num] * 10) + (bot_word[:text].length - bot_word[:p_num]))
word_params
exit
data[0]['meta']['stems']
data[0]['meta']
data[0]
exit
data
exit
pw[num].count
pw[num].delete_at(word_i)
pw[num].count
pw[num][0] = nil
pw[num][0]
pw[num].first
pw[num].count
pw[num][word_i]
pw[num][word_i] = nil
pw[num].class
pw.class
type of pw
pw[num].except(word_i)
pw[num][word_i]
pw[num].delete(24)
word_i
pw[num][word_i]
pw[num].delete(word_i)
pw[num]delete(word_i)
pw[num][word_i].delete
pw[num][word_i]
pw[num].delete(word_i)
word_i
pw[num][word_i]
word
pw[num]
pw
exit
data
exit
JSON.parse(res.body)
JSON.parse(res)
res.body
res
exit
JSON.parse(res)
require 'json'
res.body["meta"]
res.body[:meta]
res.body
res.body.meta
JSON.parse(res)
res.body[0]
res.body
res
exit
bot_word
exit
word = pw[8][word_i]
word_i = rand(0...pw[8].count)
i = rand(0...pw[8].count)
pw[8].count
pw[8]
pw.keys[7]
target = rand(0...pw.keys.count)
target
target = (0...pw.keys.count)
rand(4..15)
pw.keys.last
pw.keys.first
pw.keys.count > 0
pw = Scraper.get_playable_words(prompt.last(3))
pw.keys.first
pw.keys.count > 0
!!pw.keys
pw.keys
!!pw
pw
pw = Scraper.get_playable_words(prompt.last(5))
pw = _
Scraper.get_playable_words(prompt.last(5))
Scraper.get_playable_words(prompt.last(5))&.keys.last
Scraper.get_playable_words(prompt.last(4))&.keys.last
Scraper.get_playable_words(prompt.last(3))&.keys.last
Scraper.get_playable_words(prompt.last(3)).keys.last
Scraper.get_playable_words(prompt.last(3)).keys[0]
Scraper.get_playable_words(prompt.last(3)).keys
Scraper.get_playable_words(prompt.last(3))[2]
Scraper.get_playable_words(prompt.last(3))[15]
Scraper.get_playable_words(prompt.last(3)).last
Scraper.get_playable_words(prompt.last(3)).first
Scraper.get_playable_words(prompt.last(3))
Scraper.get_playable_words(prompt.last(3)).count
Scraper.get_playable_words(prompt.last(4))
Scraper.get_playable_words(prompt.last(4)).count
Scraper.get_playable_words(prompt.last(5)).count
!!Scraper.get_playable_words(prompt.last(5))
Scraper.get_playable_words(prompt.last(5))
prompt = word_params[:prompt_text]
word_params[:prompt_text].length - 1
word_params[:prompt_text].length
word_params[:prompt_text]
rand(1..2)
rand(1...2)
rand(1..2)
Scraper.get_playable_words('xx')[5]
Scraper.get_playable_words('xx')
Scraper.get_playable_words('er')[5][13]
Scraper.get_playable_words('er')[5][0]
Scraper.get_playable_words('er')[5].count
Scraper.get_playable_words('er')[5]
Scraper.get_playable_words('er')['5']
Scraper.get_playable_words('er').5
Scraper.get_playable_words('er')[5]
Scraper.get_playable_words('er')
word_params[:prompt_text].last(2)
word_params[:prompt_text].last
word_params[:prompt_text]
word_params
Scraper
exit
Game.last
